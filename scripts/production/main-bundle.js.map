{
  "version": 3,
  "sources": [
    "../../node_modules/browser-pack-flat/_prelude",
    "../source/main-partials/_print-links-as-footnotes.js",
    "../../node_modules/skip-link-focus/skip-link-focus.js",
    "../source/main-partials/_skip-link-focus.js"
  ],
  "names": [
    "links_container_selector",
    "footnotes_container_class_name",
    "arguments",
    "length",
    "print_only_class_name",
    "footnotes_headline_element",
    "footnotes_headline_text",
    "reference_text_before_number",
    "reference_text_after_number",
    "document",
    "querySelector",
    "plaf_footnotes_container",
    "createElement",
    "classList",
    "add",
    "innerHTML",
    "plaf_footnotes_list",
    "plaf_urls",
    "plaf_link_number",
    "querySelectorAll",
    "forEach",
    "plaf_link",
    "getElementsByTagName",
    "plaf_url",
    "href",
    "plaf_reference",
    "plaf_reference_number",
    "plaf_link_duplicate_number",
    "indexOf",
    "parentNode",
    "insertBefore",
    "nextSibling",
    "plaf_footnotes_list_element",
    "appendChild",
    "push",
    "_$skipLinkFocus_1",
    "root",
    "factory",
    "define",
    "amd",
    "skipLinkFocus",
    "this",
    "skipLinkClickHandler",
    "e",
    "skipToElement",
    "target",
    "hash",
    "substring",
    "id",
    "element",
    "test",
    "window",
    "getElementById",
    "tagName",
    "tabIndex",
    "focus",
    "init",
    "options",
    "selector",
    "navigator",
    "userAgent",
    "addEventListener",
    "i",
    "skipLinks",
    "location"
  ],
  "mappings": "CAAA,YCUA,SACEA,GAOA,IANAC,EAMAC,UAAAC,OAAA,QAAA,IAAAD,UAAA,GAAAA,UAAA,GANiC,qBACjCE,EAKAF,UAAAC,OAAA,QAAA,IAAAD,UAAA,GAAAA,UAAA,GALwB,aACxBG,EAIAH,UAAAC,OAAA,QAAA,IAAAD,UAAA,GAAAA,UAAA,GAJ6B,KAC7BI,EAGAJ,UAAAC,OAAA,QAAA,IAAAD,UAAA,GAAAA,UAAA,GAH0B,QAC1BK,EAEAL,UAAAC,OAAA,QAAA,IAAAD,UAAA,GAAAA,UAAA,GAF+B,IAC/BM,EACAN,UAAAC,OAAA,QAAA,IAAAD,UAAA,GAAAA,UAAA,GAD8B,IAI9B,QAAA,IACEF,GACqD,OAArDS,SAASC,cAAcV,GACvB,CAEA,IAAMW,EAA2BF,SAASG,cAAc,WACxDD,EAAyBE,UAAUC,IACjCb,EACAG,GAEFO,EAAyBI,UAAzB,IAAyCV,EAAzC,IAAuEC,EAAvE,KAAmGD,EAAnG,IAGA,IAAMW,EAAsBP,SAASG,cAAc,MAG7CK,KAIFC,EAAmB,EAKJT,SAASU,iBACvBnB,EADc,+EAKRoB,QAAQ,SAAAC,GAEjB,GAAIA,EAAUC,qBAAqB,OAAOnB,OAAS,EAAG,CAEpD,IAAMoB,EAAWF,EAAUG,KAGrBC,EAAiBhB,SAASG,cAAc,OAC9Ca,EAAeZ,UAAUC,IAAIV,GAG7B,IAAIsB,EAGEC,EAA6BV,EAAUW,QAAQL,GAqBrD,GAhBEG,EADEC,GAA8B,EACRA,EAA6B,EAE7BT,EAI1BO,EAAeV,UACbR,EACAmB,EACAlB,EACFa,EAAUQ,WAAWC,aACnBL,EACAJ,EAAUU,aAIRJ,EAA6B,EAAG,CAElC,IAAMK,EAA8BvB,SAASG,cAAc,MAC3DoB,EAA4BjB,UAAYQ,EAGxCP,EAAoBiB,YAAYD,GAIhCf,EAAUiB,KAAKX,GAGfL,GAAoB,MAM1BP,EAAyBsB,YAAYjB,GAGrCP,SAASC,cAAc,QAAQuB,YAAYtB,IAlG/C,CAsGsB,sBChHtB,IAAAwB,MACA,SAAAC,EAAAC,GAAA,aAAA,mBAAAC,QAAAA,OAAAC,IAAAD,UAAAD,GAAA,iBAAAF,EAAAA,EAAAE,IAAAD,EAAAI,cAAAH,IAAA,CAAAI,KAAA,WAAA,aAAA,SAAAC,EAAAC,GAAAC,EAAAD,EAAAE,OAAAC,KAAAC,UAAA,IAAA,SAAAH,EAAAI,GAAA,IAAAC,EAAA,gBAAAC,KAAAF,KAAAC,EAAAE,OAAA1C,SAAA2C,eAAAJ,MAAA,wCAAAE,KAAAD,EAAAI,WAAAJ,EAAAK,UAAA,GAAAL,EAAAM,SAAA,OAAAC,KAAA,SAAAC,GAAA,IAAAA,EAAAA,OAAAC,SAAAD,EAAAC,UAAA,aAAAP,QAAA,6BAAAD,KAAAS,UAAAC,YAAAT,OAAAU,iBAAA,CAAA,IAAAC,EAAAC,EAAAZ,OAAA1C,SAAAU,iBAAAsC,EAAAC,UAAA,IAAAP,OAAAU,iBAAA,aAAA,WAAAjB,EAAAoB,SAAAlB,KAAAC,UAAA,MAAA,GAAAe,EAAA,EAAAA,EAAAC,EAAA5D,SAAA2D,EAAAC,EAAAD,GAAAD,iBAAA,QAAAnB,GAAAsB,SAAAlB,MAAAkB,SAAAlB,KAAAC,UAAA,IAAAH,EAAAoB,SAAAlB,KAAAC,UAAA,MAAAH,cAAAA,KCMsBT,EAERqB,MAAOE,SAAU,qBHT/B",
  "sourcesContent": [
    "(function(){\n",
    "/**\n * =============================================================================\n * Print links as footnotes\n *\n * Mostly taken from Aaron Gustafson’s article\n * “Improving Link Display for Print” on A List Apart:\n * https://alistapart.com/article/improvingprint\n * =============================================================================\n */\n\nfunction printLinksAsFootnotes(\n  links_container_selector,\n  footnotes_container_class_name = \"print-links-footer\",\n  print_only_class_name = \"print-only\",\n  footnotes_headline_element = \"h3\",\n  footnotes_headline_text = \"Links\",\n  reference_text_before_number = \"[\",\n  reference_text_after_number = \"]\"\n) {\n  // Only proceed if a container selector was passed to the function and if\n  // there is at least one element which matches the container selector.\n  if (\n    links_container_selector !== undefined &&\n    document.querySelector(links_container_selector) !== null\n  ) {\n    // Create a container and headline for the footnotes.\n    const plaf_footnotes_container = document.createElement(\"section\");\n    plaf_footnotes_container.classList.add(\n      footnotes_container_class_name,\n      print_only_class_name\n    );\n    plaf_footnotes_container.innerHTML = `<${footnotes_headline_element}>${footnotes_headline_text}</${footnotes_headline_element}>`;\n\n    // Create an empty list to be populated with the footnotes.\n    const plaf_footnotes_list = document.createElement(\"ol\");\n\n    // Create an array to store used URLs, so we can check for duplicates.\n    const plaf_urls = [];\n\n    // Create a variable to keep track of the number used for each link,\n    // so we have it for footnote references.\n    let plaf_link_number = 1;\n\n    // Get all containers and extract all contained links, ignoring links which\n    // should not appear as footnotes because they don’t make sense in a printed\n    // version of the page.\n    const plaf_links = document.querySelectorAll(\n      `${links_container_selector} a[href]:not([href^='#']):not([href^=\"mailto\"]):not([href^=\"javascript\"])`\n    );\n\n    // Process each link found in the containers.\n    plaf_links.forEach(plaf_link => {\n      // Only process the link if it doesn’t contain an image.\n      if (plaf_link.getElementsByTagName(\"img\").length < 1) {\n        // Extract the URL of the link.\n        const plaf_url = plaf_link.href;\n\n        // Create the superscript reference number and insert it after the link.\n        const plaf_reference = document.createElement(\"sup\");\n        plaf_reference.classList.add(print_only_class_name);\n\n        // Create variable to store the reference number.\n        let plaf_reference_number;\n\n        // Check if the current link URL was alreday found before.\n        const plaf_link_duplicate_number = plaf_urls.indexOf(plaf_url);\n\n        // Use link number of first found occurance of the current URL to prevent\n        // duplicates in the footnote list.\n        if (plaf_link_duplicate_number > -1) {\n          plaf_reference_number = plaf_link_duplicate_number + 1;\n        } else {\n          plaf_reference_number = plaf_link_number;\n        }\n\n        // Create the footnote reference reference and append it to the link.\n        plaf_reference.innerHTML =\n          reference_text_before_number +\n          plaf_reference_number +\n          reference_text_after_number;\n        plaf_link.parentNode.insertBefore(\n          plaf_reference,\n          plaf_link.nextSibling\n        );\n\n        // If the current link URL is not a duplicate …\n        if (plaf_link_duplicate_number < 0) {\n          // … create the footnote, …\n          const plaf_footnotes_list_element = document.createElement(\"li\");\n          plaf_footnotes_list_element.innerHTML = plaf_url;\n\n          // … add the new footnote to the list of footnotes, …\n          plaf_footnotes_list.appendChild(plaf_footnotes_list_element);\n\n          // … store the URL of the current link in the array for later\n          // reference, …\n          plaf_urls.push(plaf_url);\n\n          // … increment the link number to prepare it for the next loop.\n          plaf_link_number += 1;\n        }\n      }\n    });\n\n    // Add the footnotes list to the footnotes container.\n    plaf_footnotes_container.appendChild(plaf_footnotes_list);\n\n    // Add the footnores container to the document.\n    document.querySelector(\"body\").appendChild(plaf_footnotes_container);\n  }\n}\n\nprintLinksAsFootnotes(\".page-main-content\");\n",
    "var _$skipLinkFocus_1 = {};\n!function(root,factory){\"use strict\";\"function\"==typeof define&&define.amd?define([],factory):\"object\"==typeof _$skipLinkFocus_1?_$skipLinkFocus_1=factory():root.skipLinkFocus=factory()}(this,function(){\"use strict\";function skipLinkClickHandler(e){skipToElement(e.target.hash.substring(1))}function skipToElement(id){var element;/^[A-z0-9_-]+$/.test(id)&&(element=window.document.getElementById(id))&&(/^(?:a|select|input|button|textarea)$/i.test(element.tagName)||(element.tabIndex=-1),element.focus())}return{init:function(options){if((options=options||{}).selector=options.selector||\".skip-link\",window&&/webkit|opera|msie|trident/i.test(navigator.userAgent)&&window.addEventListener){var i,skipLinks=window.document.querySelectorAll(options.selector);for(window.addEventListener(\"hashchange\",function(){skipToElement(location.hash.substring(1))},!1),i=0;i<skipLinks.length;++i)skipLinks[i].addEventListener(\"click\",skipLinkClickHandler);location.hash&&location.hash.substring(1)&&skipToElement(location.hash.substring(1))}},skipToElement:skipToElement}});\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNraXAtbGluay1mb2N1cy5qcyJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImRlZmluZSIsImFtZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJza2lwTGlua0ZvY3VzIiwidGhpcyIsInNraXBMaW5rQ2xpY2tIYW5kbGVyIiwiZSIsInNraXBUb0VsZW1lbnQiLCJ0YXJnZXQiLCJoYXNoIiwic3Vic3RyaW5nIiwiaWQiLCJlbGVtZW50IiwidGVzdCIsIndpbmRvdyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJ0YWdOYW1lIiwidGFiSW5kZXgiLCJmb2N1cyIsImluaXQiLCJvcHRpb25zIiwic2VsZWN0b3IiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJhZGRFdmVudExpc3RlbmVyIiwiaSIsInNraXBMaW5rcyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJsb2NhdGlvbiIsImxlbmd0aCJdLCJtYXBwaW5ncyI6IjtDQWNDLFNBQVVBLElBQUFBLENBQU1DLE9BQUFBLENBQUFBLENBQ2hCLFlBQUEsQ0FFSyxVQUFBLEVBQUEsT0FBc0JDLE1BQUFBLEVBQVVBLE1BQUFBLENBQU9DLEdBQUFBLENBQzNDRCxNQUFBQSxDQUFBQSxFQUFBQSxDQUFZRCxPQUFBQSxDQUFBQSxDQUNELFFBQUEsRUFBQSxPQUFvQkcsaUJBQUFBLENBQy9CQyxpQkFBT0QsQ0FBVUgsT0FBQUEsRUFBQUEsQ0FFakJELElBQUFBLENBQUtNLGFBQUFBLENBQWdCTCxPQUFBQSxFQUFBQSxDQVJ2QixDQVVHTSxJQUFBQSxDQUFNLFVBQUEsQ0FDUixZQUFBLENBMEJBLFNBQVNDLG9CQUFBQSxDQUFzQkMsQ0FBQUEsQ0FBQUEsQ0FDOUJDLGFBQUFBLENBQWVELENBQUFBLENBQUVFLE1BQUFBLENBQU9DLElBQUFBLENBQUtDLFNBQUFBLENBQVcsQ0FBQSxDQUFBLENBQUEsQ0FHekMsU0FBU0gsYUFBQUEsQ0FBZUksRUFBQUEsQ0FBQUEsQ0FDdkIsSUFBSUMsT0FBQUEsQ0FFSyxlQUFBLENBQWdCQyxJQUFBQSxDQUFNRixFQUFBQSxDQUFBQSxHQUkvQkMsT0FBQUEsQ0FBVUUsTUFBQUEsQ0FBT0MsUUFBQUEsQ0FBU0MsY0FBQUEsQ0FBZ0JMLEVBQUFBLENBQUFBLENBQUFBLEdBR2xDLHVDQUFBLENBQXdDRSxJQUFBQSxDQUFNRCxPQUFBQSxDQUFRSyxPQUFBQSxDQUFBQSxHQUM1REwsT0FBQUEsQ0FBUU0sUUFBQUEsQ0FBQUEsQ0FBWSxDQUFBLENBQUEsQ0FHckJOLE9BQUFBLENBQVFPLEtBQUFBLEVBQUFBLENBQUFBLENBSVYsTUFBQSxDQUNDQyxJQUFBQSxDQS9DRCxTQUFlQyxPQUFBQSxDQUFBQSxDQUlkLEdBQUEsQ0FIQUEsT0FBQUEsQ0FBVUEsT0FBQUEsRUFBQUEsRUFBQUEsRUFDRkMsUUFBQUEsQ0FBV0QsT0FBQUEsQ0FBUUMsUUFBQUEsRUFBWSxZQUFBLENBRWxDUixNQUFBQSxFQUFVLDRCQUFBLENBQTZCRCxJQUFBQSxDQUFNVSxTQUFBQSxDQUFVQyxTQUFBQSxDQUFBQSxFQUFlVixNQUFBQSxDQUFPVyxnQkFBQUEsQ0FBbUIsQ0FDcEcsSUFBSUMsQ0FBQUEsQ0FDSEMsU0FBQUEsQ0FBWWIsTUFBQUEsQ0FBT0MsUUFBQUEsQ0FBU2EsZ0JBQUFBLENBQWtCUCxPQUFBQSxDQUFRQyxRQUFBQSxDQUFBQSxDQU92RCxJQUxBUixNQUFBQSxDQUFPVyxnQkFBQUEsQ0FBa0IsWUFBQSxDQUFjLFVBQUEsQ0FDdENsQixhQUFBQSxDQUFlc0IsUUFBQUEsQ0FBU3BCLElBQUFBLENBQUtDLFNBQUFBLENBQVcsQ0FBQSxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQ3RDLENBQUEsQ0FBQSxDQUdHZ0IsQ0FBQUEsQ0FBSSxDQUFBLENBQUdBLENBQUFBLENBQUlDLFNBQUFBLENBQVVHLE1BQUFBLENBQUFBLEVBQVVKLENBQUFBLENBQ3BDQyxTQUFBQSxDQUFXRCxDQUFBQSxDQUFBQSxDQUFJRCxnQkFBQUEsQ0FBa0IsT0FBQSxDQUFTcEIsb0JBQUFBLENBQUFBLENBSXRDd0IsUUFBQUEsQ0FBU3BCLElBQUFBLEVBQVFvQixRQUFBQSxDQUFTcEIsSUFBQUEsQ0FBS0MsU0FBQUEsQ0FBVyxDQUFBLENBQUEsRUFDOUNILGFBQUFBLENBQWVzQixRQUFBQSxDQUFTcEIsSUFBQUEsQ0FBS0MsU0FBQUEsQ0FBVyxDQUFBLENBQUEsQ0FBQSxDQUFBLENBQUEsQ0E2QjFDSCxhQUFBQSxDQUFlQSxhQUFBQSxDQUFBQSxDQUFBQSxDQUFBQSxDQUFBQSIsInNvdXJjZXNDb250ZW50IjpbbnVsbF19",
    "/**\n * =============================================================================\n * Skip Link Focus\n * https://github.com/cedaro/skip-link-focus\n * =============================================================================\n */\n\nconst skipLinkFocus = require(\"skip-link-focus\");\n\nskipLinkFocus.init({ selector: \".skiplinks__link\" });\n"
  ],
  "sourceRoot": ""
}