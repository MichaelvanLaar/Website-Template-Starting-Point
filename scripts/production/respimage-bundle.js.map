{
  "version": 3,
  "sources": [
    "../../node_modules/respimage/respimage.js"
  ],
  "names": [
    "window",
    "document",
    "undefined",
    "trim",
    "str",
    "replace",
    "chooseLowRes",
    "lowRes",
    "diff",
    "dpr",
    "add",
    "Math",
    "pow",
    "isLandscape",
    "ascendingSort",
    "a",
    "b",
    "res",
    "getCandidateForSrc",
    "src",
    "set",
    "i",
    "candidate",
    "candidates",
    "ri",
    "parseSet",
    "makeUrl",
    "length",
    "url",
    "lowTreshHold",
    "partialLowTreshHold",
    "lazyFactor",
    "tMemory",
    "substractCurRes",
    "eminpx",
    "alwaysCheckWDescriptor",
    "resizeThrottle",
    "evalID",
    "regLength",
    "buidlStr",
    "isDomReady",
    "regReady",
    "run",
    "resizeEval",
    "timerId",
    "image2",
    "noop",
    "image",
    "createElement",
    "getImgAttr",
    "getAttribute",
    "setImgAttr",
    "setAttribute",
    "removeImgAttr",
    "removeAttribute",
    "docElem",
    "documentElement",
    "types",
    "cfg",
    "xQuant",
    "maxX",
    "reflowBug",
    "style",
    "ua",
    "navigator",
    "userAgent",
    "supportAbort",
    "test",
    "match",
    "RegExp",
    "$1",
    "curSrcProp",
    "regWDesc",
    "regSize",
    "regDescriptor",
    "regHDesc",
    "setOptions",
    "respimgCFG",
    "baseStyle",
    "location",
    "protocol",
    "fsCss",
    "isVwDirty",
    "cssCache",
    "sizeLengthCache",
    "DPR",
    "devicePixelRatio",
    "units",
    "px",
    "in",
    "anchor",
    "alreadyRun",
    "on",
    "obj",
    "evt",
    "fn",
    "capture",
    "addEventListener",
    "attachEvent",
    "memoize",
    "cache",
    "input",
    "evalCSS",
    "css",
    "args",
    "arguments",
    "index",
    "string",
    "toLowerCase",
    "parsedLength",
    "Function",
    "e",
    "setResolution",
    "sizesattr",
    "w",
    "cWidth",
    "calcListLength",
    "x",
    "respimage",
    "opt",
    "elements",
    "plen",
    "options",
    "nodeType",
    "nodeName",
    "toUpperCase",
    "context",
    "reparse",
    "reevaluate",
    "console",
    "warn",
    "qsa",
    "reselect",
    "sel",
    "selShort",
    "setupRun",
    "fillImg",
    "teardownRun",
    "parseDescriptor",
    "descriptor",
    "descriptorObj",
    "parsedDescriptor",
    "$2",
    "implementation",
    "hasFeature",
    "ns",
    "Date",
    "getTime",
    "substr",
    "supSrcset",
    "supSizes",
    "supPicture",
    "HTMLPictureElement",
    "srcset",
    "complete",
    "u",
    "setSize",
    "href",
    "querySelectorAll",
    "matchesMedia",
    "matchMedia",
    "matches",
    "media",
    "mMQ",
    "apply",
    "this",
    "calcLength",
    "sourceSizeValue",
    "value",
    "supportsType",
    "type",
    "parseSize",
    "sourceSizeStr",
    "cands",
    "pos",
    "descpos",
    "can",
    "search",
    "slice",
    "charAt",
    "indexOf",
    "has1x",
    "push",
    "getEmValue",
    "body",
    "div",
    "originalHTMLCSS",
    "cssText",
    "originalBodyCSS",
    "appendChild",
    "offsetWidth",
    "removeChild",
    "parseFloat",
    "sourceSizeListStr",
    "uT",
    "sourceSize",
    "parsedSize",
    "len",
    "sourceSizeList",
    "split",
    "winningLength",
    "width",
    "setRes",
    "sizes",
    "applySetCandidate",
    "img",
    "j",
    "bestCandidate",
    "curSrc",
    "curCan",
    "isSameSet",
    "candidateSrc",
    "abortCurSrc",
    "oldRes",
    "imageData",
    "evaled",
    "lazyF",
    "sub",
    "sets",
    "pic",
    "sort",
    "setSrc",
    "origStyle",
    "zoom",
    "getSet",
    "parseSets",
    "element",
    "parent",
    "srcsetAttribute",
    "imageSet",
    "isWDescripor",
    "srcsetParsed",
    "hasPicture",
    "call",
    "picture",
    "source",
    "sources",
    "getElementsByTagName",
    "supported",
    "parsed",
    "srcSetCandidates",
    "matchingSet",
    "evaluated",
    "extreme",
    "parentNode",
    "dprM",
    "max",
    "min",
    "innerWidth",
    "clientWidth",
    "height",
    "innerHeight",
    "clientHeight",
    "vw",
    "vh",
    "em",
    "rem",
    "join",
    "clearTimeout",
    "readyState",
    "setTimeout",
    "fillImgs",
    "_",
    "picturefill",
    "name",
    "shift",
    "picturefillCFG"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/*! respimage - v1.4.2 - 2015-08-22\n Licensed MIT */\n!function(window, document, undefined) {\n    \"use strict\";\n    function trim(str) {\n        return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, \"\");\n    }\n    function updateMetrics() {\n        var dprM;\n        isVwDirty = !1, DPR = window.devicePixelRatio, cssCache = {}, sizeLengthCache = {}, \n        dprM = (DPR || 1) * cfg.xQuant, cfg.uT || (cfg.maxX = Math.max(1.3, cfg.maxX), dprM = Math.min(dprM, cfg.maxX), \n        ri.DPR = dprM), units.width = Math.max(window.innerWidth || 0, docElem.clientWidth), \n        units.height = Math.max(window.innerHeight || 0, docElem.clientHeight), units.vw = units.width / 100, \n        units.vh = units.height / 100, units.em = ri.getEmValue(), units.rem = units.em, \n        lazyFactor = cfg.lazyFactor / 2, lazyFactor = lazyFactor * dprM + lazyFactor, substractCurRes = .4 + .1 * dprM, \n        lowTreshHold = .5 + .2 * dprM, partialLowTreshHold = .5 + .25 * dprM, tMemory = dprM + 1.3, \n        (isLandscape = units.width > units.height) || (lazyFactor *= .9), supportAbort && (lazyFactor *= .9), \n        evalID = [ units.width, units.height, dprM ].join(\"-\");\n    }\n    function chooseLowRes(lowRes, diff, dpr) {\n        var add = diff * Math.pow(lowRes - .4, 1.9);\n        return isLandscape || (add /= 1.3), lowRes += add, lowRes > dpr;\n    }\n    function applyBestCandidate(img) {\n        var srcSetCandidates, matchingSet = ri.getSet(img), evaluated = !1;\n        \"pending\" != matchingSet && (evaluated = evalID, matchingSet && (srcSetCandidates = ri.setRes(matchingSet), \n        evaluated = ri.applySetCandidate(srcSetCandidates, img))), img[ri.ns].evaled = evaluated;\n    }\n    function ascendingSort(a, b) {\n        return a.res - b.res;\n    }\n    function setSrcToCur(img, src, set) {\n        var candidate;\n        return !set && src && (set = img[ri.ns].sets, set = set && set[set.length - 1]), \n        candidate = getCandidateForSrc(src, set), candidate && (src = ri.makeUrl(src), img[ri.ns].curSrc = src, \n        img[ri.ns].curCan = candidate, candidate.res || setResolution(candidate, candidate.set.sizes)), \n        candidate;\n    }\n    function getCandidateForSrc(src, set) {\n        var i, candidate, candidates;\n        if (src && set) for (candidates = ri.parseSet(set), src = ri.makeUrl(src), i = 0; i < candidates.length; i++) if (src == ri.makeUrl(candidates[i].url)) {\n            candidate = candidates[i];\n            break;\n        }\n        return candidate;\n    }\n    function getAllSourceElements(picture, candidates) {\n        var i, len, source, srcset, sources = picture.getElementsByTagName(\"source\");\n        for (i = 0, len = sources.length; len > i; i++) source = sources[i], source[ri.ns] = !0, \n        srcset = source.getAttribute(\"srcset\"), srcset && candidates.push({\n            srcset: srcset,\n            media: source.getAttribute(\"media\"),\n            type: source.getAttribute(\"type\"),\n            sizes: source.getAttribute(\"sizes\")\n        });\n    }\n    var lowTreshHold, partialLowTreshHold, isLandscape, lazyFactor, tMemory, substractCurRes, eminpx, alwaysCheckWDescriptor, resizeThrottle, evalID, ri = {}, noop = function() {}, image = document.createElement(\"img\"), getImgAttr = image.getAttribute, setImgAttr = image.setAttribute, removeImgAttr = image.removeAttribute, docElem = document.documentElement, types = {}, cfg = {\n        xQuant: 1,\n        lazyFactor: .4,\n        maxX: 2\n    }, srcAttr = \"data-pfsrc\", srcsetAttr = srcAttr + \"set\", reflowBug = \"webkitBackfaceVisibility\" in docElem.style, ua = navigator.userAgent, supportAbort = /rident/.test(ua) || /ecko/.test(ua) && ua.match(/rv\\:(\\d+)/) && RegExp.$1 > 35, curSrcProp = \"currentSrc\", regWDesc = /\\s+\\+?\\d+(e\\d+)?w/, regSize = /((?:\\([^)]+\\)(?:\\s*and\\s*|\\s*or\\s*|\\s*not\\s*)?)+)?\\s*(.+)/, regDescriptor = /^([\\+eE\\d\\.]+)(w|x)$/, regHDesc = /\\s*\\d+h\\s*/, setOptions = window.respimgCFG, baseStyle = (\"https:\" == location.protocol, \n    \"position:absolute;left:0;visibility:hidden;display:block;padding:0;border:none;font-size:1em;width:1em;overflow:hidden;clip:rect(0px, 0px, 0px, 0px)\"), fsCss = \"font-size:100%!important;\", isVwDirty = !0, cssCache = {}, sizeLengthCache = {}, DPR = window.devicePixelRatio, units = {\n        px: 1,\n        \"in\": 96\n    }, anchor = document.createElement(\"a\"), alreadyRun = !1, on = function(obj, evt, fn, capture) {\n        obj.addEventListener ? obj.addEventListener(evt, fn, capture || !1) : obj.attachEvent && obj.attachEvent(\"on\" + evt, fn);\n    }, memoize = function(fn) {\n        var cache = {};\n        return function(input) {\n            return input in cache || (cache[input] = fn(input)), cache[input];\n        };\n    }, evalCSS = function() {\n        var regLength = /^([\\d\\.]+)(em|vw|px)$/, replace = function() {\n            for (var args = arguments, index = 0, string = args[0]; ++index in args; ) string = string.replace(args[index], args[++index]);\n            return string;\n        }, buidlStr = memoize(function(css) {\n            return \"return \" + replace((css || \"\").toLowerCase(), /\\band\\b/g, \"&&\", /,/g, \"||\", /min-([a-z-\\s]+):/g, \"e.$1>=\", /max-([a-z-\\s]+):/g, \"e.$1<=\", /calc([^)]+)/g, \"($1)\", /(\\d+[\\.]*[\\d]*)([a-z]+)/g, \"($1 * e.$2)\", /^(?!(e.[a-z]|[0-9\\.&=|><\\+\\-\\*\\(\\)\\/])).*/gi, \"\");\n        });\n        return function(css, length) {\n            var parsedLength;\n            if (!(css in cssCache)) if (cssCache[css] = !1, length && (parsedLength = css.match(regLength))) cssCache[css] = parsedLength[1] * units[parsedLength[2]]; else try {\n                cssCache[css] = new Function(\"e\", buidlStr(css))(units);\n            } catch (e) {}\n            return cssCache[css];\n        };\n    }(), setResolution = function(candidate, sizesattr) {\n        return candidate.w ? (candidate.cWidth = ri.calcListLength(sizesattr || \"100vw\"), \n        candidate.res = candidate.w / candidate.cWidth) : candidate.res = candidate.x, candidate;\n    }, respimage = function(opt) {\n        var elements, i, plen, options = opt || {};\n        if (options.elements && 1 == options.elements.nodeType && (\"IMG\" == options.elements.nodeName.toUpperCase() ? options.elements = [ options.elements ] : (options.context = options.elements, \n        options.elements = null)), options.reparse && (options.reevaluate = !0, window.console && console.warn && console.warn(\"reparse was renamed to reevaluate!\")), \n        elements = options.elements || ri.qsa(options.context || document, options.reevaluate || options.reselect ? ri.sel : ri.selShort), \n        plen = elements.length) {\n            for (ri.setupRun(options), alreadyRun = !0, i = 0; plen > i; i++) ri.fillImg(elements[i], options);\n            ri.teardownRun(options);\n        }\n    }, parseDescriptor = memoize(function(descriptor) {\n        var descriptorObj = [ 1, \"x\" ], parsedDescriptor = trim(descriptor || \"\");\n        return parsedDescriptor && (parsedDescriptor = parsedDescriptor.replace(regHDesc, \"\"), \n        descriptorObj = parsedDescriptor.match(regDescriptor) ? [ 1 * RegExp.$1, RegExp.$2 ] : !1), \n        descriptorObj;\n    });\n    if (curSrcProp in image || (curSrcProp = \"src\"), types[\"image/jpeg\"] = !0, types[\"image/gif\"] = !0, \n    types[\"image/png\"] = !0, types[\"image/svg+xml\"] = document.implementation.hasFeature(\"http://wwwindow.w3.org/TR/SVG11/feature#Image\", \"1.1\"), \n    ri.ns = (\"ri\" + new Date().getTime()).substr(0, 9), ri.supSrcset = \"srcset\" in image, \n    ri.supSizes = \"sizes\" in image, ri.supPicture = !!window.HTMLPictureElement, ri.supSrcset && ri.supPicture && !ri.supSizes && !function(image2) {\n        image.srcset = \"data:,a\", image2.src = \"data:,a\", ri.supSrcset = image.complete === image2.complete, \n        ri.supPicture = ri.supSrcset && ri.supPicture;\n    }(document.createElement(\"img\")), ri.selShort = \"picture>img,img[srcset]\", ri.sel = ri.selShort, \n    ri.cfg = cfg, ri.supSrcset && (ri.sel += \",img[\" + srcsetAttr + \"]\"), ri.DPR = DPR || 1, \n    ri.u = units, ri.types = types, alwaysCheckWDescriptor = ri.supSrcset && !ri.supSizes, \n    ri.setSize = noop, ri.makeUrl = memoize(function(src) {\n        return anchor.href = src, anchor.href;\n    }), ri.qsa = function(context, sel) {\n        return context.querySelectorAll(sel);\n    }, ri.matchesMedia = function() {\n        return ri.matchesMedia = window.matchMedia && (matchMedia(\"(min-width: 0.1em)\") || {}).matches ? function(media) {\n            return !media || matchMedia(media).matches;\n        } : ri.mMQ, ri.matchesMedia.apply(this, arguments);\n    }, ri.mMQ = function(media) {\n        return media ? evalCSS(media) : !0;\n    }, ri.calcLength = function(sourceSizeValue) {\n        var value = evalCSS(sourceSizeValue, !0) || !1;\n        return 0 > value && (value = !1), value;\n    }, ri.supportsType = function(type) {\n        return type ? types[type] : !0;\n    }, ri.parseSize = memoize(function(sourceSizeStr) {\n        var match = (sourceSizeStr || \"\").match(regSize);\n        return {\n            media: match && match[1],\n            length: match && match[2]\n        };\n    }), ri.parseSet = function(set) {\n        if (!set.cands) {\n            var pos, url, descriptor, last, descpos, can, srcset = set.srcset;\n            for (set.cands = []; srcset; ) srcset = srcset.replace(/^\\s+/g, \"\"), pos = srcset.search(/\\s/g), \n            descriptor = null, -1 != pos ? (url = srcset.slice(0, pos), last = url.charAt(url.length - 1), \n            \",\" != last && url || (url = url.replace(/,+$/, \"\"), descriptor = \"\"), srcset = srcset.slice(pos + 1), \n            null == descriptor && (descpos = srcset.indexOf(\",\"), -1 != descpos ? (descriptor = srcset.slice(0, descpos), \n            srcset = srcset.slice(descpos + 1)) : (descriptor = srcset, srcset = \"\"))) : (url = srcset, \n            srcset = \"\"), url && (descriptor = parseDescriptor(descriptor)) && (can = {\n                url: url.replace(/^,+/, \"\"),\n                set: set\n            }, can[descriptor[1]] = descriptor[0], \"x\" == descriptor[1] && 1 == descriptor[0] && (set.has1x = !0), \n            set.cands.push(can));\n        }\n        return set.cands;\n    }, ri.getEmValue = function() {\n        var body;\n        if (!eminpx && (body = document.body)) {\n            var div = document.createElement(\"div\"), originalHTMLCSS = docElem.style.cssText, originalBodyCSS = body.style.cssText;\n            div.style.cssText = baseStyle, docElem.style.cssText = fsCss, body.style.cssText = fsCss, \n            body.appendChild(div), eminpx = div.offsetWidth, body.removeChild(div), eminpx = parseFloat(eminpx, 10), \n            docElem.style.cssText = originalHTMLCSS, body.style.cssText = originalBodyCSS;\n        }\n        return eminpx || 16;\n    }, ri.calcListLength = function(sourceSizeListStr) {\n        if (!(sourceSizeListStr in sizeLengthCache) || cfg.uT) {\n            var sourceSize, parsedSize, length, media, i, len, sourceSizeList = trim(sourceSizeListStr).split(/\\s*,\\s*/), winningLength = !1;\n            for (i = 0, len = sourceSizeList.length; len > i && (sourceSize = sourceSizeList[i], \n            parsedSize = ri.parseSize(sourceSize), length = parsedSize.length, media = parsedSize.media, \n            !length || !ri.matchesMedia(media) || (winningLength = ri.calcLength(length)) === !1); i++) ;\n            sizeLengthCache[sourceSizeListStr] = winningLength ? winningLength : units.width;\n        }\n        return sizeLengthCache[sourceSizeListStr];\n    }, ri.setRes = function(set) {\n        var candidates;\n        if (set) {\n            candidates = ri.parseSet(set);\n            for (var i = 0, len = candidates.length; len > i; i++) setResolution(candidates[i], set.sizes);\n        }\n        return candidates;\n    }, ri.setRes.res = setResolution, ri.applySetCandidate = function(candidates, img) {\n        if (candidates.length) {\n            var candidate, dpr, i, j, diff, length, bestCandidate, curSrc, curCan, isSameSet, candidateSrc, abortCurSrc, oldRes, imageData = img[ri.ns], evaled = evalID, lazyF = lazyFactor, sub = substractCurRes;\n            if (curSrc = imageData.curSrc || img[curSrcProp], curCan = imageData.curCan || setSrcToCur(img, curSrc, candidates[0].set), \n            dpr = ri.DPR, oldRes = curCan && curCan.res, !bestCandidate && curSrc && (abortCurSrc = supportAbort && !img.complete && curCan && oldRes - .2 > dpr, \n            abortCurSrc || curCan && !(tMemory > oldRes) || (curCan && dpr > oldRes && oldRes > lowTreshHold && (partialLowTreshHold > oldRes && (lazyF *= .8, \n            sub += .04 * dpr), curCan.res += lazyF * Math.pow(oldRes - sub, 2)), isSameSet = !imageData.pic || curCan && curCan.set == candidates[0].set, \n            curCan && isSameSet && curCan.res >= dpr && (bestCandidate = curCan))), !bestCandidate) for (oldRes && (curCan.res = curCan.res - (curCan.res - oldRes) / 2), \n            candidates.sort(ascendingSort), length = candidates.length, bestCandidate = candidates[length - 1], \n            i = 0; length > i; i++) if (candidate = candidates[i], candidate.res >= dpr) {\n                j = i - 1, bestCandidate = candidates[j] && (diff = candidate.res - dpr) && (abortCurSrc || curSrc != ri.makeUrl(candidate.url)) && chooseLowRes(candidates[j].res, diff, dpr) ? candidates[j] : candidate;\n                break;\n            }\n            return oldRes && (curCan.res = oldRes), bestCandidate && (candidateSrc = ri.makeUrl(bestCandidate.url), \n            imageData.curSrc = candidateSrc, imageData.curCan = bestCandidate, candidateSrc != curSrc && ri.setSrc(img, bestCandidate), \n            ri.setSize(img)), evaled;\n        }\n    }, ri.setSrc = function(img, bestCandidate) {\n        var origStyle;\n        img.src = bestCandidate.url, reflowBug && (origStyle = img.style.zoom, img.style.zoom = \"0.999\", \n        img.style.zoom = origStyle);\n    }, ri.getSet = function(img) {\n        var i, set, supportsType, match = !1, sets = img[ri.ns].sets;\n        for (i = 0; i < sets.length && !match; i++) if (set = sets[i], set.srcset && ri.matchesMedia(set.media) && (supportsType = ri.supportsType(set.type))) {\n            \"pending\" == supportsType && (set = supportsType), match = set;\n            break;\n        }\n        return match;\n    }, ri.parseSets = function(element, parent, options) {\n        var srcsetAttribute, imageSet, isWDescripor, srcsetParsed, hasPicture = \"PICTURE\" == parent.nodeName.toUpperCase(), imageData = element[ri.ns];\n        (imageData.src === undefined || options.src) && (imageData.src = getImgAttr.call(element, \"src\"), \n        imageData.src ? setImgAttr.call(element, srcAttr, imageData.src) : removeImgAttr.call(element, srcAttr)), \n        (imageData.srcset === undefined || !ri.supSrcset || element.srcset || options.srcset) && (srcsetAttribute = getImgAttr.call(element, \"srcset\"), \n        imageData.srcset = srcsetAttribute, srcsetParsed = !0), imageData.sets = [], hasPicture && (imageData.pic = !0, \n        getAllSourceElements(parent, imageData.sets)), imageData.srcset ? (imageSet = {\n            srcset: imageData.srcset,\n            sizes: getImgAttr.call(element, \"sizes\")\n        }, imageData.sets.push(imageSet), isWDescripor = (alwaysCheckWDescriptor || imageData.src) && regWDesc.test(imageData.srcset || \"\"), \n        isWDescripor || !imageData.src || getCandidateForSrc(imageData.src, imageSet) || imageSet.has1x || (imageSet.srcset += \", \" + imageData.src, \n        imageSet.cands.push({\n            url: imageData.src,\n            x: 1,\n            set: imageSet\n        }))) : imageData.src && imageData.sets.push({\n            srcset: imageData.src,\n            sizes: null\n        }), imageData.curCan = null, imageData.curSrc = undefined, imageData.supported = !(hasPicture || imageSet && !ri.supSrcset || isWDescripor), \n        srcsetParsed && ri.supSrcset && !imageData.supported && (srcsetAttribute ? (setImgAttr.call(element, srcsetAttr, srcsetAttribute), \n        element.srcset = \"\") : removeImgAttr.call(element, srcsetAttr)), imageData.supported && !imageData.srcset && (!imageData.src && element.src || element.src != ri.makeUrl(imageData.src)) && (null == imageData.src ? element.removeAttribute(\"src\") : element.src = imageData.src), \n        imageData.parsed = !0;\n    }, ri.fillImg = function(element, options) {\n        var parent, imageData, extreme = options.reselect || options.reevaluate;\n        if (element[ri.ns] || (element[ri.ns] = {}), imageData = element[ri.ns], extreme || imageData.evaled != evalID) {\n            if (!imageData.parsed || options.reevaluate) {\n                if (parent = element.parentNode, !parent) return;\n                ri.parseSets(element, parent, options);\n            }\n            imageData.supported ? imageData.evaled = evalID : applyBestCandidate(element);\n        }\n    }, ri.setupRun = function(options) {\n        (!alreadyRun || isVwDirty || DPR != window.devicePixelRatio) && (updateMetrics(), \n        options.elements || options.context || clearTimeout(resizeThrottle));\n    }, ri.supPicture ? (respimage = noop, ri.fillImg = noop) : (document.createElement(\"picture\"), \n    function() {\n        var isDomReady, regReady = window.attachEvent ? /d$|^c/ : /d$|^c|^i/, run = function() {\n            var readyState = document.readyState || \"\";\n            timerId = setTimeout(run, \"loading\" == readyState ? 200 : 999), document.body && (isDomReady = isDomReady || regReady.test(readyState), \n            ri.fillImgs(), isDomReady && clearTimeout(timerId));\n        }, resizeEval = function() {\n            ri.fillImgs();\n        }, onResize = function() {\n            clearTimeout(resizeThrottle), isVwDirty = !0, resizeThrottle = setTimeout(resizeEval, 99);\n        }, timerId = setTimeout(run, document.body ? 0 : 20);\n        on(window, \"resize\", onResize), on(document, \"readystatechange\", run);\n    }()), ri.respimage = respimage, ri.fillImgs = respimage, ri.teardownRun = noop, \n    respimage._ = ri, window.respimage = window.picturefill || respimage, !window.picturefill) for (window.respimgCFG = {\n        ri: ri,\n        push: function(args) {\n            var name = args.shift();\n            \"function\" == typeof ri[name] ? ri[name].apply(ri, args) : (cfg[name] = args[0], \n            alreadyRun && ri.fillImgs({\n                reselect: !0\n            }));\n        }\n    }; setOptions && setOptions.length; ) window.respimgCFG.push(setOptions.shift());\n    window.picturefill || (window.picturefill = window.respimage, window.picturefillCFG || (window.picturefillCFG = window.respimgCFG));\n}(window, document);"
  ],
  "sourceRoot": ""
}